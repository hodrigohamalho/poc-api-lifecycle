asyncapi: '2.5.0'
id: 'youhodler:streaming:api'
info:
  title: Youhodler WS
  version: '1.0.0'
  description: 
    The page describes connection via WebSocket. To obtain access you should make request GET refresh token.
servers:
  test:
    url: b2b-sandbox.youhodler.com/socket.io
    protocol: ws
    description: Connection entrypoint  
  rabbitmq:
    url: localhost:5672
    description: RabbitMQ
    protocol: amqp
    protocolVersion: '0.9.1'
  broker-central:
    url: test.mykafkacluster.org:18092
    protocol: kafka
    protocolVersion: 2.6.0
    description: Kafka Broker running out
  
defaultContentType: application/json

channels:
  /:
    bindings:
      ws: 
        query:
          
          type: object
          properties:
            token:
              name: authorization
              description: Authorization token given after Refresh token
              type: string
              examples:
               - eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjEyOGRiMzEyLThkNWUtNGM1Zi1iMjg3LWU0MTE3ZDg0ODA1YSIsImFjY291bnRJZCI6IjEyOGRiMzEyLThkNWUtNGM1Zi1iMjg3LWU0MTE3ZDg0ODA1YSIsInRva2VuSWQiOiIxMjhkYjMxMi04ZDVlLTRjNWYtYjI4Ny1lNDExN2Q4NDgwNWEtMjIxMjE2MTEzNDI1IiwiaXNCdXNpbmVzcyI6dHJ1ZSwiaXNBY2Nlc3NUb2tlbiI6dHJ1ZSwiaWF0IjoxNjcxMTkwNDY1LCJleHAiOjE2NzEyNzY4NjV9.iD--mT3xXgrgLneROBrg_N1EXTlue9sJJuPIRVAAKmM
            eio:
              name: EIO
              type: integer
              default: 3
            transport:
              name: transport
              type: string
              default: websocket  
          required: [token, eio, transport] 
    subscribe:
      message:
        oneOf:
          - $ref: '#/components/messages/rates-selected'
          - $ref: '#/components/messages/hodls-active'
  order-received:
    publish:
      operationId: orderReceivedPub
      description: Payload of received order
      message:
        $ref: '#/components/messages/order'
      bindings:
        amqp:
          timestamp: true
          ack: false
          bindingVersion: 0.2.0
    subscribe:
      operationId: orderReceivedSub
      description: Payload of received order
      message:
        $ref: '#/components/messages/order'
    bindings:
      amqp:
        is: routingKey
        exchange:
          name: orderExchange
          type: direct
          durable: true
          vhost: /
        bindingVersion: 0.2.0
  topico.pedido:
    description: Descricao bem detalhada desse topico.pedido
    
    subscribe:
      operationId: pedidoConsumer
      bindings:
        kafka:
          clientId:
            type: string
            pattern: '^[a-z]{22}'
          groupId:
            type: string
            pattern: '^[A-Z]{10}[1-5]'
      message:
        name: pedidoMsg
        title: TÃ­tulo Legal
        contentType: 'application/json'

components:
  messages:
    rates-selected:
      schemaFormat: 'application/schema+yaml;version=draft-07'
      summary: Subscribe to updates certain rates
      tags:
        - name: rates
      payload:
        type: object
        properties:
          name:
            type: string
            description: Name of message
            default: rates-selected
          symbols:
            type: array
            description: List of trading pair subscribe to.
            items:
              type: string
              format: baseTicker/quoteTicker
              example: 
                - btc/usdt
                - eth/usdt
                - bnb/usdt
          throttle:
            type: integer
            description: Delay between message, ms
            default: 1000
      x-response:
        type: array
        items:
          type: object
          properties:
            fromTicker: 
              type: string
            toTicker:
              type: string
            date:
              type: integer
              format: timestamp
            price:
              type: number
            bid:
              type: number
            ask:
              type: number
            diff24h:
              type: number
            updated:
              type: integer
              format: timestamp
        examples:
          - fromTicker: eur
            toTicker: usd       
            date: 1671468262000
            price: 1.061725
            bid: 1.057443          
            ask: 1.066007
            diff24h: -0.002655
            updated: 1671468310218
          - fromTicker: dai
            toTicker: usd       
            date: 1671468258540
            price: 0.9997000899730081
            bid: 0.997701          
            ask: 1.001699
            diff24h: -0.0003
            updated: 1671468309996
    order:
      payload:
        type: object
        properties:
          id:
            type: integer
            format: int64
            description: ID of received order
          customerReference:
            type: string
            description: Reference for the customer according the order
    hodls-active:
      schemaFormat: 'application/schema+yaml;version=draft-07'
      summary: Subscribe to updates all active HODLs event 
      tags:
        - name: hodl
      payload:
        type: object
        properties:
          name:
            type: string
            description: Name of message
            default: hodls:active