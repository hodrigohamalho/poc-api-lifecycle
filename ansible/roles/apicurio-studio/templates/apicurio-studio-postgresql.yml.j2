---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  namespace: {{ utils_project }}
  name: studio-pgdata-claim
  labels:
    deploymentconfig: studio-postgresql
    app: apicurio-studio
    group: apicurio-studio
    app.kubernetes.io/part-of: apicurio-studio
    app.kubernetes.io/instance: studio-postgresql
    app.kubernetes.io/name: studio-postgresql
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1G
  storageClassName: {{ storage_class }}
  volumeMode: Filesystem
---
kind: DeploymentConfig
apiVersion: apps.openshift.io/v1
metadata:
  namespace: {{ utils_project }}
  labels:
    template: apicurio-studio
    app: apicurio-studio
    group: apicurio-studio
    app.kubernetes.io/part-of: apicurio-studio
    app.kubernetes.io/instance: studio-postgresql
    app.kubernetes.io/name: studio-postgresql
  name: studio-postgresql
spec:
  strategy:
    type: Recreate
    recreateParams:
      timeoutSeconds: 600
    resources: { }
    activeDeadlineSeconds: 21600
  replicas: 1
  test: false
  selector:
    app: studio-postgresql
    deploymentconfig: studio-postgresql
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: studio-postgresql
        deploymentconfig: studio-postgresql
        template: apicurio-studio
    spec:
      volumes:
      - name: studio-pgdata
        persistentVolumeClaim:
          claimName: studio-pgdata-claim
      containers:
        - name: studio-postgresql
          image: quay.io/centos7/postgresql-13-centos7
          ports:
            - containerPort: 5432
              protocol: TCP
          env:
            - name: POSTGRESQL_USER
              value: apicurio
            - name: POSTGRESQL_PASSWORD
              value: studio
            - name: POSTGRESQL_DB
              value: studio
            - name: POSTGRESQL_DATABASE
              value: studio
          resources:
            limits:
              memory: 512Mi
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: studio-pgdata
          livenessProbe:
            tcpSocket:
              port: 5432
            initialDelaySeconds: 30
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - '-i'
                - '-c'
                - >-
                  psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d
                  $POSTGRESQL_DATABASE -c 'SELECT 1'
            initialDelaySeconds: 5
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          terminationMessagePath: /dev/termination-log
          imagePullPolicy: Always
          securityContext:
            capabilities: { }
            privileged: false
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
---
apiVersion: v1
kind: Service
metadata:
  namespace: {{ utils_project }}
  name: studio-postgresql
  labels:
    app: studio-postgresql
    template: apicurio-studio
spec:
  ports:
    - name: studio-postgresql
      protocol: TCP
      port: 5432
      targetPort: 5432
  selector:
    app: studio-postgresql
  type: ClusterIP
  sessionAffinity: None
status:
  loadBalancer: {}